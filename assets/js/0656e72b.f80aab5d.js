"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[3864],{4334:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>c,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"Advanced Configuration/How to add configurations","title":"How to add Configurations","description":"Stirling PDF allows easy customization of the app.","source":"@site/docs/Advanced Configuration/How to add configurations.md","sourceDirName":"Advanced Configuration","slug":"/Advanced Configuration/How to add configurations","permalink":"/Advanced Configuration/How to add configurations","draft":false,"unlisted":false,"editUrl":"https://github.com/Stirling-Tools/Stirling-Tools.github.io/tree/main/docs/Advanced Configuration/How to add configurations.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Path Structure","permalink":"/Installation/Path Structure"},"next":{"title":"Login, System and Security","permalink":"/Advanced Configuration/System and Security"}}');var i=n(4848),a=n(8453),s=n(1470),r=n(9365);const l={sidebar_position:1},c="How to add Configurations",u={},d=[{value:"Extra notes",id:"extra-notes",level:4},{value:"Environment only parameters",id:"environment-only-parameters",level:3},{value:"Local",id:"local",level:3},{value:"Docker Configuration",id:"docker-configuration",level:2}];function p(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"how-to-add-configurations",children:"How to add Configurations"})}),"\n",(0,i.jsx)(t.p,{children:"Stirling PDF allows easy customization of the app.\nIncludes things like"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Custom application name"}),"\n",(0,i.jsx)(t.li,{children:"Custom slogans, icons, HTML, images CSS etc (via file overrides)"}),"\n"]}),"\n",(0,i.jsxs)(t.p,{children:["There are two options for this, either using the generated settings file ",(0,i.jsx)(t.code,{children:"settings.yml"}),"\nThis file is located in the ",(0,i.jsx)(t.code,{children:"/configs"})," directory and follows standard YAML formatting"]}),"\n",(0,i.jsx)(t.p,{children:"Environment variables are also supported and would override the settings file\nFor example in the settings.yml you have"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"security:\n  enableLogin: 'true'\n"})}),"\n",(0,i.jsxs)(t.p,{children:["To have this via an environment variable you would have ",(0,i.jsx)(t.code,{children:"SECURITY_ENABLELOGIN"})]}),"\n",(0,i.jsx)(t.p,{children:"The Current list of settings is"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"security:\n  enableLogin: false # set to 'true' to enable login\n  csrfDisabled: false # set to 'true' to disable CSRF protection (not recommended for production)\n  loginAttemptCount: 5 # lock user account after 5 tries; when using e.g. Fail2Ban you can deactivate the function with -1\n  loginResetTimeMinutes: 120 # lock account for 2 hours after x attempts\n  loginMethod: all # Accepts values like 'all' and 'normal'(only Login with Username/Password), 'oauth2'(only Login with OAuth2) or 'saml2'(only Login with SAML2)\n  initialLogin:\n    username: '' # initial username for the first login\n    password: '' # initial password for the first login\n  oauth2:\n    enabled: false # set to 'true' to enable login (Note: enableLogin must also be 'true' for this to work)\n    client:\n      keycloak:\n        issuer: '' # URL of the Keycloak realm's OpenID Connect Discovery endpoint\n        clientId: '' # client ID for Keycloak OAuth2\n        clientSecret: '' # client secret for Keycloak OAuth2\n        scopes: openid, profile, email # scopes for Keycloak OAuth2\n        useAsUsername: preferred_username # field to use as the username for Keycloak OAuth2. Available options are: [email | name | given_name | family_name | preferred_name]\n      google:\n        clientId: '' # client ID for Google OAuth2\n        clientSecret: '' # client secret for Google OAuth2\n        scopes: email, profile # scopes for Google OAuth2\n        useAsUsername: email # field to use as the username for Google OAuth2. Available options are: [email | name | given_name | family_name]\n      github:\n        clientId: '' # client ID for GitHub OAuth2\n        clientSecret: '' # client secret for GitHub OAuth2\n        scopes: read:user # scope for GitHub OAuth2\n        useAsUsername: login # field to use as the username for GitHub OAuth2. Available options are: [email | login | name]\n    issuer: '' # set to any Provider that supports OpenID Connect Discovery (/.well-known/openid-configuration) endpoint\n    clientId: '' # client ID from your Provider\n    clientSecret: '' # client secret from your Provider\n    autoCreateUser: true # set to 'true' to allow auto-creation of non-existing users\n    blockRegistration: false # set to 'true' to deny login with SSO without prior registration by an admin\n    useAsUsername: email # default is 'email'; custom fields can be used as the username\n    scopes: openid, profile, email # specify the scopes for which the application will request permissions\n    provider: google # set this to your OAuth Provider's name, e.g., 'google' or 'keycloak'\n  saml2:\n    enabled: false # Only enabled for paid enterprise clients (enterpriseEdition.enabled must be true)\n    provider: '' # The name of your Provider\n    autoCreateUser: true # set to 'true' to allow auto-creation of non-existing users\n    blockRegistration: false # set to 'true' to deny login with SSO without prior registration by an admin\n    registrationId: stirling # The name of your Service Provider (SP) app name. Should match the name in the path for your SSO & SLO URLs\n    idpMetadataUri: https://dev-XXXXXXXX.okta.com/app/externalKey/sso/saml/metadata # The uri for your Provider's metadata\n    idpSingleLoginUrl: https://dev-XXXXXXXX.okta.com/app/dev-XXXXXXXX_stirlingpdf_1/externalKey/sso/saml # The URL for initiating SSO. Provided by your Provider\n    idpSingleLogoutUrl: https://dev-XXXXXXXX.okta.com/app/dev-XXXXXXXX_stirlingpdf_1/externalKey/slo/saml # The URL for initiating SLO. Provided by your Provider\n    idpIssuer: '' # The ID of your Provider\n    idpCert: classpath:okta.cert # The certificate your Provider will use to authenticate your app's SAML authentication requests. Provided by your Provider\n    privateKey: classpath:saml-private-key.key # Your private key. Generated from your keypair\n    spCert: classpath:saml-public-cert.crt # Your signing certificate. Generated from your keypair\n\npremium:\n  key: 00000000-0000-0000-0000-000000000000\n  enabled: false # Enable license key checks for pro/enterprise features\n  proFeatures:\n    SSOAutoLogin: false\n    CustomMetadata:\n      autoUpdateMetadata: false\n      author: username\n      creator: Stirling-PDF\n      producer: Stirling-PDF\n    googleDrive:\n      enabled: false\n      clientId: ''\n      apiKey: ''\n      appId: ''\n\nlegal:\n  termsAndConditions: https://www.stirlingpdf.com/terms-and-conditions # URL to the terms and conditions of your application (e.g. https://example.com/terms). Empty string to disable or filename to load from local file in static folder\n  privacyPolicy: https://www.stirlingpdf.com/privacy-policy # URL to the privacy policy of your application (e.g. https://example.com/privacy). Empty string to disable or filename to load from local file in static folder\n  accessibilityStatement: '' # URL to the accessibility statement of your application (e.g. https://example.com/accessibility). Empty string to disable or filename to load from local file in static folder\n  cookiePolicy: '' # URL to the cookie policy of your application (e.g. https://example.com/cookie). Empty string to disable or filename to load from local file in static folder\n  impressum: '' # URL to the impressum of your application (e.g. https://example.com/impressum). Empty string to disable or filename to load from local file in static folder\n\nsystem:\n  defaultLocale: en-US # set the default language (e.g. 'de-DE', 'fr-FR', etc)\n  googlevisibility: false # 'true' to allow Google visibility (via robots.txt), 'false' to disallow\n  enableAlphaFunctionality: false # set to enable functionality which might need more testing before it fully goes live (this feature might make no changes)\n  showUpdate: false # see when a new update is available\n  showUpdateOnlyAdmin: false # only admins can see when a new update is available, depending on showUpdate it must be set to 'true'\n  customHTMLFiles: false # enable to have files placed in /customFiles/templates override the existing template HTML files\n  tessdataDir: /usr/share/tessdata # path to the directory containing the Tessdata files. This setting is relevant for Windows systems. For Windows users, this path should be adjusted to point to the appropriate directory where the Tessdata files are stored.\n  enableAnalytics: null # set to 'true' to enable analytics, set to 'false' to disable analytics; for enterprise users, this is set to true\n  enableUrlToPDF: false # Set to 'true' to enable URL to PDF, INTERNAL ONLY, known security issues, should not be used externally\n  disableSanitize: false # set to true to disable Sanitize HTML; (can lead to injections in HTML)\n  datasource:\n    enableCustomDatabase: false # Enterprise users ONLY, set this property to 'true' if you would like to use your own custom database configuration\n    customDatabaseUrl: '' # eg jdbc:postgresql://localhost:5432/postgres, set the url for your own custom database connection. If provided, the type, hostName, port and name are not necessary and will not be used\n    username: postgres # set the database username\n    password: postgres # set the database password\n    type: postgresql # the type of the database to set (e.g. 'h2', 'postgresql')\n    hostName: localhost # the host name to use for the database url. Set to 'localhost' when running the app locally. Set to match the name of the container name of your database container when running the app on a server (Docker configuration)\n    port: 5432 # set the port number of the database. Ensure this matches the port the database is listening to\n    name: postgres # set the name of your database. Should match the name of the database you create\n  customPaths:\n    pipeline:\n      watchedFoldersDir: '' #Defaults to /pipeline/watchedFolders\n      finishedFoldersDir: '' #Defaults to /pipeline/finishedFolders\n    operations:\n      weasyprint: '' #Defaults to /opt/venv/bin/weasyprint\n      unoconvert: '' #Defaults to /opt/venv/bin/unoconvert\n  fileUploadLimit: '' # Defaults to \"\". No limit when string is empty. Set a number, between 0 and 999, followed by one of the following strings to set a limit. \"KB\", \"MB\", \"GB\".\n\nui:\n  appName: '' # application's visible name\n  homeDescription: '' # short description or tagline shown on the homepage\n  appNameNavbar: '' # name displayed on the navigation bar\n  languages: [] # If empty, all languages are enabled. To display only German and Polish [\"de_DE\", \"pl_PL\"]. British English is always enabled.\n\nendpoints:\n  toRemove: [] # list endpoints to disable (e.g. ['img-to-pdf', 'remove-pages'])\n  groupsToRemove: [] # list groups to disable (e.g. ['LibreOffice'])\n\nmetrics:\n  enabled: true # 'true' to enable Info APIs (`/api/*`) endpoints, 'false' to disable\n\nprocessExecutor:\n  sessionLimit: # Process executor instances limits\n    libreOfficeSessionLimit: 1\n    pdfToHtmlSessionLimit: 1\n    qpdfSessionLimit: 4\n    tesseractSessionLimit: 1\n    pythonOpenCvSessionLimit: 8\n    weasyPrintSessionLimit: 16\n    installAppSessionLimit: 1\n    calibreSessionLimit: 1\n  timeoutMinutes: # Process executor timeout in minutes\n    libreOfficetimeoutMinutes: 30\n    pdfToHtmltimeoutMinutes: 20\n    pythonOpenCvtimeoutMinutes: 30\n    weasyPrinttimeoutMinutes: 30\n    installApptimeoutMinutes: 60\n    calibretimeoutMinutes: 30\n    tesseractTimeoutMinutes: 30\n"})}),"\n",(0,i.jsxs)(t.p,{children:["There is an additional config file ",(0,i.jsx)(t.code,{children:"/configs/custom_settings.yml"})," where users familiar with java and spring application.properties can input their own settings on-top of Stirling-PDFs existing ones. For more info on any custom settings such as SSL or DEBUG mode please check ",(0,i.jsx)(t.a,{href:"Extra-Settings",children:"here"})]}),"\n",(0,i.jsx)(t.h4,{id:"extra-notes",children:"Extra notes"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["Endpoints. Currently, the endpoints ENDPOINTS_TOREMOVE and ENDPOINTS_GROUPSTOREMOVE can include comma separate lists of endpoints and groups to disable as example ENDPOINTS_TOREMOVE=img-to-pdf,remove-pages would disable both image-to-pdf and remove pages, ENDPOINTS_GROUPSTOREMOVE=LibreOffice Would disable all things that use LibreOffice. You can see a list of all endpoints and groups ",(0,i.jsx)(t.a,{href:"https://github.com/Stirling-Tools/Stirling-PDF/blob/main/Endpoint-groups.md",children:"here"})]}),"\n",(0,i.jsx)(t.li,{children:"customStaticFilePath. Customise static files such as the app logo by placing files in the /customFiles/static/ directory. An example of customising app logo is placing a /customFiles/static/favicon.svg to override current SVG. This can be used to change any images/icons/css/fonts/js etc in Stirling-PDF"}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"environment-only-parameters",children:"Environment only parameters"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"SYSTEM_ROOTURIPATH"})," ie set to ",(0,i.jsx)(t.code,{children:"/pdf-app"})," to Set the application's root URI to ",(0,i.jsx)(t.code,{children:"localhost:8080/pdf-app"})]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"SYSTEM_CONNECTIONTIMEOUTMINUTES"})," to set custom connection timeout values"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"DISABLE_ADDITIONAL_FEATURES"})," to tell docker to download security jar (required as false for auth login)"]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"LANGS"})," to define custom font libraries to install for use for document conversions"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"local",children:"Local"}),"\n",(0,i.jsx)(t.p,{children:"If running Java directly outside of docker, you can set these environment variables before starting the app:"}),"\n",(0,i.jsxs)(s.A,{groupId:"operating-systems",children:[(0,i.jsx)(r.A,{value:"unix",label:"Unix",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'export UI_APPNAME="Stirling PDF"\n'})})}),(0,i.jsx)(r.A,{value:"cmd",label:"Windows (CMD)",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-batch",children:"set UI_APPNAME=Stirling PDF\n"})})}),(0,i.jsx)(r.A,{value:"powershell",label:"Windows (PowerShell)",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-powershell",children:'$env:UI_APPNAME = "Stirling PDF"\n'})})})]}),"\n",(0,i.jsx)(t.h2,{id:"docker-configuration",children:"Docker Configuration"}),"\n",(0,i.jsx)(t.p,{children:"If using Docker, you can set environment variables via either Docker run or Docker Compose as part of your installation.\nSimply add these to the end of your script/file:"}),"\n",(0,i.jsxs)(s.A,{groupId:"docker-config",children:[(0,i.jsx)(r.A,{value:"docker-run",label:"Docker Run",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-bash",children:'-e "UI_APPNAME=Stirling PDF" \\\n-e "UI_HOMEDESCRIPTION=Your locally hosted one-stop-shop for all your PDF needs." \\\n-e "UI_APPNAVBARNAME=Stirling PDF" \\\n'})})}),(0,i.jsx)(r.A,{value:"docker-compose",label:"Docker Compose",children:(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-yaml",children:"environment:\n  UI_APPNAME: Stirling PDF\n  UI_HOMEDESCRIPTION: Your locally hosted one-stop-shop for all your PDF needs.\n  UI_APPNAVBARNAME: Stirling PDF\n"})})})]})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>s});n(6540);var o=n(4164);const i={tabItem:"tabItem_Ymn6"};var a=n(4848);function s(e){let{children:t,hidden:n,className:s}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,o.A)(i.tabItem,s),hidden:n,children:t})}},1470:(e,t,n)=>{n.d(t,{A:()=>S});var o=n(6540),i=n(4164),a=n(3104),s=n(6347),r=n(205),l=n(7485),c=n(1682),u=n(679);function d(e){return o.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,o.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=t??function(e){return d(e).map((e=>{let{props:{value:t,label:n,attributes:o,default:i}}=e;return{value:t,label:n,attributes:o,default:i}}))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function h(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:n}=e;const i=(0,s.W6)(),a=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return n??null}({queryString:t,groupId:n});return[(0,l.aZ)(a),(0,o.useCallback)((e=>{if(!a)return;const t=new URLSearchParams(i.location.search);t.set(a,e),i.replace({...i.location,search:t.toString()})}),[a,i])]}function f(e){const{defaultValue:t,queryString:n=!1,groupId:i}=e,a=p(e),[s,l]=(0,o.useState)((()=>function(e){let{defaultValue:t,tabValues:n}=e;if(0===n.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!h({value:t,tabValues:n}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${n.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const o=n.find((e=>e.default))??n[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:a}))),[c,d]=m({queryString:n,groupId:i}),[f,g]=function(e){let{groupId:t}=e;const n=function(e){return e?`docusaurus.tab.${e}`:null}(t),[i,a]=(0,u.Dv)(n);return[i,(0,o.useCallback)((e=>{n&&a.set(e)}),[n,a])]}({groupId:i}),b=(()=>{const e=c??f;return h({value:e,tabValues:a})?e:null})();(0,r.A)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,o.useCallback)((e=>{if(!h({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,a]),tabValues:a}}var g=n(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var y=n(4848);function v(e){let{className:t,block:n,selectedValue:o,selectValue:s,tabValues:r}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,a.a_)(),u=e=>{const t=e.currentTarget,n=l.indexOf(t),i=r[n].value;i!==o&&(c(t),s(i))},d=e=>{let t=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,y.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.A)("tabs",{"tabs--block":n},t),children:r.map((e=>{let{value:t,label:n,attributes:a}=e;return(0,y.jsx)("li",{role:"tab",tabIndex:o===t?0:-1,"aria-selected":o===t,ref:e=>l.push(e),onKeyDown:d,onClick:u,...a,className:(0,i.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":o===t}),children:n??t},t)}))})}function w(e){let{lazy:t,children:n,selectedValue:a}=e;const s=(Array.isArray(n)?n:[n]).filter(Boolean);if(t){const e=s.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:(0,i.A)("margin-top--md",e.props.className)}):null}return(0,y.jsx)("div",{className:"margin-top--md",children:s.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a})))})}function x(e){const t=f(e);return(0,y.jsxs)("div",{className:(0,i.A)("tabs-container",b.tabList),children:[(0,y.jsx)(v,{...t,...e}),(0,y.jsx)(w,{...t,...e})]})}function S(e){const t=(0,g.A)();return(0,y.jsx)(x,{...e,children:d(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(6540);const i={},a=o.createContext(i);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);